#!/usr/bin/env python
import zmq

if __name__ == '__main__':

    #  _             
    # |_) _. _|_ |_  
    # |  (_|  |_ | | 
    #
    import sys, os
    address, path_config, db_path_rel = sys.argv[1:]
    db_path = os.path.abspath(db_path_rel)

    #                                     _       
    # |_|  _. ._   _| |  _     _  _  ._ _|_ o  _  
    # | | (_| | | (_| | (/_   (_ (_) | | |  | (_| 
    #                                          _|
    from zezfio.chandler import get_json
    json_config = get_json(path_config)

    import zezfio.template
    code = zezfio.template.generate_server(json_config, db_path)
    m = zezfio.template.importCode(code, "ZEFIO")

    #  __                 
    # (_   _  ._    _  ._ 
    # __) (/_ | \/ (/_ |  
    #
    from zezfio.error_codes import fail_1, fail_126, success

    context = zmq.Context(io_threads=4)
    sock = context.socket(zmq.REP)
    sock.bind(address)

    # ~#~#~#~#
    # Little_optimisation
    # ~#~#~#~#
    send = sock.send
    recv_multipart = sock.recv_multipart
    d_instance = m.d_instance

    while True:
        try:
            #For the sake of performance, inline the main loop
            #Get the info
            try:
                l = recv_multipart()
            except zmq.error.ZMQError:
                raise zezfio.ExitLoop

            try:
                action, str_instance, name = l
            except ValueError:
                action, str_instance, name, data = l
            else:
                print "Error when reading the multipart message"
                raise zezfio.ExitLoop

            instance = d_instance[str_instance]

            #Get the instance
            if action == "has":

                try:
                    getattr(instance, name)
                except IOError:
                    send(fail_1)
                except:
                    send(fail_126)
                else:
                    send(fail_0)

            elif action == "size":

                try:
                    sze = getattr(instance, "%s_csze" % name)
                except IOError:
                    send(fail_1)
                except:
                    send(fail_126)
                else:
                    send(sze)

            elif action == "get":

                try:
                    array = getattr(instance, "%s_c" % name)
                    size = getattr(instance, "%s_csze" % name)
                except IOError:
                    send(fail_1)
                except:
                    send(fail_126)
                else:
                    send(size, zmq.SNDMORE)
                    send(array, copy=False)

            elif action == "set":

                try:
                    getattr(instance, "set_%s" % name)(data)
                except IOError:
                    send(fail_1)
                except:
                    send(fail_126)
                else:
                    send(fail_0)

            else:
                raise NotImplementedError

        except zezfio.ExitLoop:
            break
